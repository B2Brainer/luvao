openapi: 3.0.3
info:
  title: Product Service API
  description: API para la gesti√≥n de productos del comparador de supermercados.
  version: 1.0.0
servers:
  - url: http://localhost:3002
    description: Local development server

tags:
  - name: Products
    description: Operaciones sobre productos

paths:
  /api/products:
    get:
      tags:
        - Products
      summary: Obtener todos los productos
      responses:
        '200':
          description: Lista de productos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

  /api/products/filter:
    get:
      tags:
        - Products
      summary: Filtrar productos por tipo
      parameters:
        - name: type
          in: query
          required: true
          schema:
            type: string
          description: Tipo de producto a filtrar
      responses:
        '200':
          description: Lista filtrada de productos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

  /api/products/{id}:
    get:
      tags:
        - Products
      summary: Obtener producto por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Producto no encontrado

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Arroz Diana
        price:
          type: number
          format: float
          example: 4500.5
        storeId:
          type: integer
          example: 2
    ProductCreate:
      type: object
      required: [name, price, storeId]
      properties:
        name:
          type: string
          example: Arroz Roa
        price:
          type: number
          format: float
          example: 5200
        storeId:
          type: integer
          example: 1
    ProductUpdate:
      type: object
      properties:
        name:
          type: string
          example: Arroz Roa Premium
        price:
          type: number
          format: float
          example: 5300

