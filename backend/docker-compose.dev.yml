services:
  # ---------------------
  # PostgreSQL por servicio
  # ---------------------
  pg_product:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: productdb
    ports:
      - "5433:5432"
    volumes:
      - pg_product_data:/var/lib/postgresql/data
    networks:
      - backend-net

  pg_store:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: storedb
    ports:
      - "5434:5432"
    volumes:
      - pg_store_data:/var/lib/postgresql/data
    networks:
      - backend-net

  pg_user:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: user_service_db
    ports:
      - "5440:5432"

    volumes:
      - pg_user_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
    - backend-net



  pg_crawler:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: crawlerdb
    ports:
      - "5435:5432"
    volumes:
      - pg_crawler_data:/var/lib/postgresql/data
    networks:
      - backend-net


  # ---------------------
  # Servicios de backend
  # ---------------------
  product-service:
    build:
      context: .
      dockerfile: ./services/product-service/Dockerfile
    env_file:
      - ./services/product-service/.env
    depends_on:
      - pg_product
    ports:
      - "3002:3002"
    command: >
      sh -c "npx prisma db push && npm start"
    networks:
      - backend-net

  store-service:
    build:
      context: .
      dockerfile: ./services/store-service/Dockerfile
    env_file:
      - ./services/store-service/.env
    depends_on:
      - pg_store
    ports:
      - "3001:3001"
    command: >
      sh -c "npx prisma db push && npm start"
    networks:
      - backend-net
  
  user-service:
    build:
      context: .
      dockerfile: services/user-service/Dockerfile
    ports:
      - "3003:3003"
    env_file:
      - ./services/user-service/.env
    depends_on:
      pg_user:
        condition: service_healthy
    networks:
      - backend-net
    command: >
      sh -c "npx prisma migrate deploy && npm start"



  crawler-service:
    build:
      context: ./services/crawler-service
    container_name: crawler-service
    depends_on:
      - pg_crawler
      - store-service
      - product-service
    ports:
      - "3004:3000"
    volumes:
      - ./services/crawler-service:/app
    environment:
      DATABASE_URL: postgresql://postgres:postgres@pg_crawler:5432/crawlerdb
      STORE_SERVICE_URL: http://store-service:3001
      PRODUCT_SERVICE_URL: http://product-service:3002
    command: >
      sh -c "prisma migrate deploy &&
         export PYTHONPATH=/app &&
         uvicorn src.app:app --host 0.0.0.0 --port 3000"
    networks:
      - backend-net

volumes:
  pg_product_data:
  pg_store_data:
  pg_crawler_data:
  pg_user_data:

networks:
  backend-net:
    driver: bridge

